(()=>{var e={777:(e,t,n)=>{var d={"./calendar-star.png":275,"./calendar-today.png":708,"./calendar-week.png":304,"./check-all.png":649,"./close.png":669,"./delete.png":385,"./delete_black.png":563,"./folder.png":37,"./inbox.png":699,"./plus-circle-black.png":241,"./plus-circle.png":899,"./text-box-edit-black.png":448,"./text-box-edit-outline.png":746};function o(e){var t=c(e);return n(t)}function c(e){if(!n.o(d,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return d[e]}o.keys=function(){return Object.keys(d)},o.resolve=c,e.exports=o,o.id=777},275:(e,t,n)=>{"use strict";e.exports=n.p+"images/8abd2de10e2fa59ac0aa.png"},708:(e,t,n)=>{"use strict";e.exports=n.p+"images/63b4f4a9d9cf14e2ac99.png"},304:(e,t,n)=>{"use strict";e.exports=n.p+"images/7184203affb14a4b1503.png"},649:(e,t,n)=>{"use strict";e.exports=n.p+"images/67b993eb1947225d0e4e.png"},669:(e,t,n)=>{"use strict";e.exports=n.p+"images/7100faba29ee3a0b8bd5.png"},385:(e,t,n)=>{"use strict";e.exports=n.p+"images/b939197dd700da7a4cb4.png"},563:(e,t,n)=>{"use strict";e.exports=n.p+"images/f8e677af036c28f8b9eb.png"},37:(e,t,n)=>{"use strict";e.exports=n.p+"images/69aa7043b83849f30339.png"},699:(e,t,n)=>{"use strict";e.exports=n.p+"images/641415297890b3a5ae8c.png"},241:(e,t,n)=>{"use strict";e.exports=n.p+"images/d849c672c4ba0e26dcc4.png"},899:(e,t,n)=>{"use strict";e.exports=n.p+"images/620d9bf9c0b02df4f93e.png"},448:(e,t,n)=>{"use strict";e.exports=n.p+"images/6f34adc1ad563f1afe8b.png"},746:(e,t,n)=>{"use strict";e.exports=n.p+"images/8392b8f7029e3a7ef421.png"}},t={};function n(d){var o=t[d];if(void 0!==o)return o.exports;var c=t[d]={exports:{}};return e[d](c,c.exports,n),c.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var d=t.getElementsByTagName("script");d.length&&(e=d[d.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{"use strict";const e=function(e){let t={};return e.keys().map((n=>{t[n.replace("./","")]=e(n)})),t}(n(777));function t(t){const n=document.createElement("div");n.classList.add("project-container");for(let d=0;d<t.length;d++){let o=t[d];o.length>15&&(o=o.slice(0,12),o+="...");const c=document.createElement("div");c.classList.add("project-item"),c.setAttribute("data-index",`${d}`);const i=document.createElement("div");i.classList.add("info");const a=document.createElement("div");a.classList.add("project-logo");const r=document.createElement("img");r.src=e["folder.png"],a.appendChild(r);const s=document.createElement("div");s.classList.add("project-item-title"),s.textContent=o,i.appendChild(a),i.appendChild(s);const l=document.createElement("div");l.classList.add("modify");const m=document.createElement("div");m.classList.add("project-logo"),m.classList.add("remove");const u=document.createElement("img");u.src=e["delete.png"],u.setAttribute("id",`${d}`),u.setAttribute("onclick","event.stopPropagation()"),u.classList.add("removeProjectButton"),m.appendChild(u),l.appendChild(m),c.appendChild(i),c.appendChild(l),n.appendChild(c)}return n}function d(t){const n=document.createElement("div");n.classList.add("items-container");for(let d=0;d<t.length;d++){const o=document.createElement("div");o.classList.add("todo-item"),o.setAttribute("data-index",`${d+1}`),o.setAttribute("data-item","true");const c=document.createElement("div");c.classList.add("todo-name");const i=document.createElement("div");switch(i.classList.add("priority"),t[d].priority){case"low":i.classList.add("low");break;case"medium":i.classList.add("medium");break;case"high":i.classList.add("high")}const a=document.createElement("div");a.classList.add("todo-title"),a.textContent=t[d].name,c.appendChild(i),c.appendChild(a);const r=document.createElement("div");r.classList.add("todo-info");const s=document.createElement("div");s.classList.add("todo-date"),s.textContent=t[d].date;const l=document.createElement("div");l.classList.add("folder-name"),l.textContent=t[d].project;const m=document.createElement("div");m.classList.add("edit");const u=document.createElement("img");u.src=e["text-box-edit-black.png"],u.setAttribute("id",`${d+1}`),u.classList.add("modifybutton"),m.appendChild(u);const p=document.createElement("div");p.classList.add("delete");const v=document.createElement("img");v.src=e["delete_black.png"],v.classList.add("deleteItem"),v.setAttribute("id",`${d+1}`),p.appendChild(v),r.appendChild(s),r.appendChild(l),r.appendChild(m),r.appendChild(p),o.appendChild(c),o.append(r),n.appendChild(o)}return n}const o=e=>{let t=[];return{addProjectItem:e=>{t.push(e)},getProjectItems:()=>t,getProjectName:()=>e,name:e}},c=(e,t,n,d,o,c,i)=>({id:e,priority:t,name:n,date:d,project:o,description:c,completed:i}),i=e=>{e.forEach((e=>{localStorage.setItem(`${e.getProjectName()}`,`${JSON.stringify(e.getProjectItems())}`);let t=o(e.getProjectName());JSON.parse(localStorage.getItem(`${e.getProjectName()}`)).forEach((e=>{t.addProjectItem(e)}))}))},a=()=>{let e=[],t=[];if(Object.keys(localStorage).forEach((n=>{let d=JSON.parse(localStorage.getItem(`${n}`)),c=o(n);d.forEach((e=>{c.addProjectItem(e)})),e.push(c),t.push(n)})),e.length<=0){let n=o("Demo");n.addProjectItem(c(1,"low","ToDo","2022-07-26",n.getProjectName(),"Your first ToDo item",!1)),e.push(n),t.push(n.getProjectName())}return{projectArray:e,projectNameArray:t}};let r=a().projectArray,s=a().projectNameArray;document.body.appendChild(((n,o)=>{let c=document.createElement("div");c.classList.add("content");let i=document.createElement("div");i.classList.add("page-body");const a=document.createElement("div");a.classList.add("header");const r=document.createElement("div");r.classList.add("header-text"),r.textContent="TODO-Project",a.appendChild(r);const s=function(){const t=document.createElement("div");t.classList.add("todo-modal-container");const n=document.createElement("div");n.classList.add("todo-modal");const d=document.createElement("div");d.classList.add("todo-modal-title");const o=document.createElement("p");o.textContent="New task";const c=document.createElement("img");c.src=e["close.png"],c.setAttribute("id","closeTodoModalImg"),d.appendChild(o),d.appendChild(c),n.appendChild(d);const i=document.createElement("div");i.classList.add("form-item-container"),i.innerHTML='\n        <div class="form-item">\n            <div class="item-label">Name</div>\n            <div class="form-input">\n                <input type="text" id="name">\n            </div>\n        </div>\n        <div class="form-item">\n            <div class="item-label">Due date</div>\n            <div class="form-input">\n                <input type="date" id="time">\n            </div>\n        </div>\n        <div class="form-item">\n            <div class="item-label">Description</div>\n            <div class="form-input">\n                <textarea id="description" cols="20" rows="3"></textarea>\n            </div>\n        </div>\n        <div class="form-item">\n            <div class="item-label">Priority</div>\n            <div class="form-input">\n                <select id="priority">\n                    <option value="low">Low</option>\n                    <option value="medium">Medium</option>\n                    <option value="high">High</option>\n                </select>\n            </div>\n        </div>\n    ';const a=document.createElement("div");a.classList.add("button-container"),a.classList.add("item-button");const r=document.createElement("button");return r.setAttribute("type","button"),r.setAttribute("id","addNewTodo"),r.textContent="Add",a.appendChild(r),n.appendChild(i),n.appendChild(a),t.appendChild(n),t}(),l=function(){const t=document.createElement("div");t.classList.add("modal-container");const n=document.createElement("div");n.classList.add("add-new-project-modal"),t.appendChild(n);const d=document.createElement("div");d.classList.add("modal-title");const o=document.createElement("p");o.textContent="New Project";const c=document.createElement("img");c.src=e["close.png"],c.setAttribute("id","closeProjectImg"),d.appendChild(o),d.appendChild(c);const i=document.createElement("div");i.classList.add("newproject-form");const a=document.createElement("div");a.classList.add("form");const r=document.createElement("div");r.classList.add("label"),r.textContent="Name";const s=document.createElement("div");s.classList.add("project-name");const l=document.createElement("input");l.setAttribute("id","projectname"),l.setAttribute("type","text"),s.appendChild(l),a.appendChild(r),a.appendChild(s),i.appendChild(a);const m=document.createElement("div");m.classList.add("button-container");const u=document.createElement("button");return u.setAttribute("type","button"),u.setAttribute("id","submitbutton"),u.textContent="Create",m.appendChild(u),n.appendChild(d),n.appendChild(i),n.appendChild(m),t.appendChild(n),t}(),m=function(){const t=document.createElement("div");t.classList.add("modify-modal-container");const n=document.createElement("div");n.classList.add("modify-todo");const d=document.createElement("div");d.classList.add("todo-modal-title");const o=document.createElement("p");o.textContent="Edit task";const c=document.createElement("img");c.src=e["close.png"],c.setAttribute("id","closeModifyTodoModalImg"),d.appendChild(o),d.appendChild(c),n.appendChild(d);const i=document.createElement("div");i.classList.add("form-item-container"),i.innerHTML='\n        <input type="hidden" id="taskid">\n        <input type="hidden" id="project">\n        <div class="form-item">\n            <div class="item-label">Name</div>\n            <div class="form-input">\n                <input type="text" id="changename">\n            </div>\n        </div>\n        <div class="form-item">\n            <div class="item-label">Due date</div>\n            <div class="form-input">\n                <input type="date" id="changetime">\n            </div>\n        </div>\n        <div class="form-item">\n            <div class="item-label">Description</div>\n            <div class="form-input">\n                <textarea id="changedescription" cols="20" rows="3"></textarea>\n            </div>\n        </div>\n        <div class="form-item">\n            <div class="item-label">Priority</div>\n            <div class="form-input">\n                <select id="changepriority">\n                    <option value="low">Low</option>\n                    <option value="medium">Medium</option>\n                    <option value="high">High</option>\n                </select>\n            </div>\n        </div>\n    ';const a=document.createElement("div");a.classList.add("button-container"),a.classList.add("item-button");const r=document.createElement("button");return r.setAttribute("type","button"),r.setAttribute("id","changeTodo"),r.textContent="Change",a.appendChild(r),n.appendChild(i),n.appendChild(a),t.appendChild(n),t}(),u=function(){const t=["Inbox","Today","Important"],n=(()=>{const e=[],t=(t,n)=>{e.push({logo:t,option:n})};return{fillNav:(e,n)=>{for(let d=0;d<n.length;d++)t(e[d],n[d])},addNavItem:t,getNavItems:()=>e}})();n.fillNav(["inbox.png","calendar-today.png","calendar-star.png"],t);const d=document.createElement("div");d.classList.add("navbar");const o=document.createElement("div");o.classList.add("nav-menus");const c=n.getNavItems();for(let n=0;n<c.length;n++){const d=document.createElement("div");d.classList.add("nav-item"),d.setAttribute("data-navoption",`${t[n]}`);const i=document.createElement("div");i.classList.add("logo");const a=document.createElement("img");a.src=e[c[n].logo],i.appendChild(a);const r=document.createElement("div");r.classList.add("nav-text"),r.textContent=c[n].option,d.appendChild(a),d.appendChild(r),o.appendChild(d)}return d.appendChild(o),d}(),p=document.createElement("div");p.classList.add("project-section");const v=document.createElement("div");v.classList.add("title");const g=document.createElement("p");g.textContent="Projects";const h=document.createElement("img");h.src=e["plus-circle.png"],h.setAttribute("id","addnewproject"),v.appendChild(g),v.appendChild(h),p.appendChild(v),p.appendChild(t(o)),u.appendChild(p);const y=document.createElement("div");return y.classList.add("todo-items"),y.setAttribute("id","todocontainer"),y.appendChild(function(t){const n=document.createElement("div");n.classList.add("option-title");const d=document.createElement("p");d.setAttribute("style","margin: 0;"),d.setAttribute("id","projectTitle"),d.textContent=t,n.appendChild(d);const o=document.createElement("img");return o.src=e["plus-circle-black.png"],o.setAttribute("id","addItem"),n.appendChild(o),n}(n[0].getProjectName())),y.appendChild(d(n[0].getProjectItems())),i.appendChild(u),i.appendChild(y),c.appendChild(s),c.appendChild(l),c.appendChild(m),c.appendChild(a),c.appendChild(i),c})(r,s));const l=(()=>{const e=document.querySelector("#addnewproject"),n=document.querySelector("#addItem"),a=document.querySelector("#closeProjectImg"),l=document.querySelector("#closeTodoModalImg"),h=document.querySelector("#submitbutton"),y=document.querySelectorAll(".project-item"),f=document.querySelector("#addNewTodo"),b=document.querySelectorAll(".deleteItem"),E=document.querySelectorAll(".removeProjectButton"),C=document.querySelectorAll(".modifybutton"),x=document.querySelector(".modal-container"),L=document.querySelector(".todo-modal-container"),j=document.querySelector(".modify-modal-container"),S=document.querySelector("#changeTodo"),q=document.querySelector("#closeModifyTodoModalImg"),A=(e.addEventListener("click",(()=>{x.setAttribute("style","display: flex")})),n.addEventListener("click",(()=>{L.setAttribute("style","display: flex")})),a.addEventListener("click",(()=>{x.setAttribute("style","display: none")})),l.addEventListener("click",(()=>{L.setAttribute("style","display: none")})),q.addEventListener("click",(()=>{j.setAttribute("style","display: none")})),h.addEventListener("click",(()=>{var e;e=document.querySelector("#projectname").value,s.push(e),r.push(o(e)),u(t(s)),x.setAttribute("style","display: none"),i(r)})),f.addEventListener("click",(()=>{!function(e){const t=document.querySelector("#name").value,n=document.querySelector("#time").value,o=document.getElementById("description").value,i=document.querySelector("#priority"),a=i[i.selectedIndex].value;if(""===t||""===n)return alert("You must add a task name and due date.");let r=v(e),s=r.getProjectItems(),l=s.length+1,m=c(l,a,t,n,r.getProjectName(),o,!1);s.push(m),p(d(s))}(document.querySelector("#projectTitle").textContent);const e=document.querySelector("#name"),t=document.querySelector("#time"),n=document.getElementById("description");e.value=t.value=n.value="",L.setAttribute("style","display: none"),i(r)})),S.addEventListener("click",(()=>{const e=document.querySelector("#changename").value,t=document.querySelector("#changetime").value,n=document.getElementById("changedescription").value,o=document.querySelector("#changepriority"),c=o[o.selectedIndex].value,a=document.querySelector("#taskid").value,s=document.querySelector("#project").value;let l=v(s).getProjectItems();const m=l.filter((e=>e.id==a))[0];m.name=e,m.date=t,m.description=n,m.priority=c,"Inbox"==document.querySelector("#projectTitle").textContent?p(d(g())):p(d(l)),j.setAttribute("style","display: none"),i(r)})),(()=>{const e=document.querySelector('[data-navoption="Inbox"]');let t=document.querySelector("#projectTitle");e.addEventListener("click",(()=>{t.textContent=e.dataset.navoption,p(d(g()))}))})(),(()=>{const e=document.querySelector('[data-navoption="Today"]');let t=document.querySelector("#projectTitle");e.addEventListener("click",(()=>{t.textContent=e.dataset.navoption;let n=g().filter((e=>new Date(e.date).getDay()==(new Date).getDay()));p(d(n))}))})(),(()=>{const e=document.querySelector('[data-navoption="Important"]');let t=document.querySelector("#projectTitle");e.addEventListener("click",(()=>{t.textContent=e.dataset.navoption;const n=g().filter((e=>"high"==e.priority));p(d(n))}))})(),e=>{e.forEach((e=>{e.addEventListener("click",(()=>{const t=document.querySelector("#projectTitle");let n=e.dataset.index;t.textContent=s[n],console.log(),p(d(r[n].getProjectItems()))}))}))}),I=e=>{e.forEach((e=>{e.addEventListener("click",(e=>{const t=document.querySelector(`[data-index="${e.target.id}"][data-item="true"]`).childNodes[1].childNodes[1].textContent,n=v(t);let o=n.getProjectItems();const c=o.findIndex((t=>t.id==e.target.id));if(1==o.length)return o.shift(),m(n),i(r),void p(d(o));o.splice(c,1),p(d(o)),m(n),i(r)}))}))},k=e=>{e.forEach((e=>{e.addEventListener("click",(e=>{if(1==r.length)return;const n=document.querySelector("#projectTitle"),o=document.querySelector(`[data-index="${e.target.id}"]`);let c=r[e.target.id];r.splice(e.target.id,1),s.splice(e.target.id,1),u(t(s)),localStorage.removeItem(o.childNodes[0].childNodes[1].textContent),c=r[0].getProjectItems(),p(d(c)),n.textContent=s[0],i(r)}))}))},P=e=>{e.forEach((e=>{e.addEventListener("click",(e=>{j.setAttribute("style","display: flex");const t=document.querySelector("#changename"),n=document.querySelector("#changetime"),d=document.getElementById("changedescription"),o=document.querySelector("#changepriority"),c=o.querySelectorAll("option"),i=document.querySelector("#taskid"),a=document.querySelector("#project"),r=document.querySelector(`[data-index="${e.target.id}"][data-item="true"]`),s=r.childNodes[1].childNodes[1].textContent,l=v(s).getProjectItems().filter((t=>t.id==e.target.id))[0];a.value=r.childNodes[1].childNodes[1].textContent,i.value=l.id,t.value=l.name,n.value=l.date,d.value=l.description,o.selectedIndex=Array.from(c).findIndex((e=>e.value==l.priority)),j.setAttribute("style","display: flex")}))}))};return A(y),I(b),k(E),P(C),{setNavProjectSectionEvent:A,setRemoveTaskFunctionality:I,setRemoveProjectFunctionality:k,setModifiTaskFunctionality:P}})();function m(e){let t=1;for(let n=0;n<e.getProjectItems().length;n++)e.getProjectItems()[n].id=t,t++}const u=e=>{const t=document.querySelector(".project-section"),n=document.querySelector(".project-container");t.removeChild(n),t.appendChild(e);const d=document.querySelectorAll(".project-item"),o=document.querySelectorAll(".removeProjectButton");l.setNavProjectSectionEvent(d),l.setRemoveProjectFunctionality(o)},p=e=>{const t=document.querySelector(".todo-items"),n=document.querySelector(".items-container");t.removeChild(n),t.appendChild(e);const d=document.querySelectorAll(".deleteItem"),o=document.querySelectorAll(".modifybutton"),c=document.querySelector("#addItem"),i=document.querySelector("#projectTitle");s.includes(i.textContent)?(c.setAttribute("style","visibility: visible"),l.setRemoveTaskFunctionality(d),l.setModifiTaskFunctionality(o)):(c.setAttribute("style","display: none"),o.forEach((e=>{e.addEventListener("click",(()=>{alert("You can only change it in the folder")}))})),d.forEach((e=>{e.addEventListener("click",(()=>{alert("You can only change it in the folder")}))})))},v=e=>void 0!==e&&r.filter((t=>t.getProjectName()===e))[0],g=()=>{const e=[];return r.forEach((t=>{t.getProjectItems().forEach((t=>{e.push(t)}))})),e}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,